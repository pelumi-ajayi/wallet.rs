name: Examine the Node.js Bindings
on:
  push:
    branches:
      - develop
      - dev
    paths:
      - '.github/workflows/examine-nodejs-bindings.yml'
      - '.github/actions/**'
      - 'bindings/nodejs/**'
      # Watch the Rust core too
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches:
      - develop
      - dev
    paths:
      - '.github/workflows/examine-nodejs-bindings.yml'
      - '.github/actions/**'
      - 'bindings/nodejs/**'
      # Watch the Rust core too
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  test:
    name: Test
    if: ${{ ! github.event.schedule }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        node: ['14', '16']
        exclude:
          # Remove once neon is updated
          - os: windows-latest
            node: '16'

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v2

      - name: Set Up Nightly Rust
        uses: ./.github/actions/setup-rust
        with:
          toolchain: nightly
          cache: true
          cache-root: bindings/nodejs/
          cache-job-id: ${{ github.workflow }}-${{ github.job }}-${{ matrix.os }}-${{ matrix.node }}
          cache-hash: ${{ hashFiles('.github/workflows/examine-nodejs-bindings.yml') }}

      - name: Set Up Node.js ${{ matrix.node }} and Yarn Cache
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          cache-dependency-path: bindings/nodejs/yarn.lock

      - name: Install Required Dependencies (Ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Run Yarn Install
        working-directory: bindings/nodejs/
        run: yarn install

      - name: Run Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path bindings/nodejs/Cargo.toml --all-features --release

      # NOTE: `yarn test` is `cargo test`.

  lint:
    name: Lint
    if: ${{ ! github.event.schedule }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v2

      - name: Set Up Nightly Clippy
        uses: ./.github/actions/setup-rust
        with:
          toolchain: nightly
          components: clippy
          cache: true
          cache-root: bindings/nodejs/
          cache-job-id: ${{ github.workflow }}-${{ github.job }}
          cache-hash: ${{ hashFiles('.github/workflows/examine-nodejs-bindings.yml') }}

      - name: Install Required Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Run Yarn Install
        working-directory: bindings/nodejs/
        run: yarn install

      - name: Run Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path bindings/nodejs/Cargo.toml --all-features --all-targets -- --deny warnings
          name: Clippy Results for the Node.js Bindings

      - name: Run ESLint
        working-directory: bindings/nodejs/
        run: yarn lint

  check-unused-deps:
    name: Check Unused Dependencies
    if: ${{ ! github.event.schedule }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v2

      - name: Install Cargo-udeps with Nightly Rust
        uses: ./.github/actions/setup-rust
        with:
          toolchain: nightly
          cache: true
          install: cargo-udeps
          cache-root: bindings/nodejs/
          cache-job-id: ${{ github.workflow }}-${{ github.job }}
          cache-hash: ${{ hashFiles('.github/workflows/examine-nodejs-bindings.yml') }}

      - name: Install Required Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Run Cargo Udeps
        uses: actions-rs/cargo@v1
        with:
          command: udeps
          args: --manifest-path bindings/nodejs/Cargo.toml --all-targets --all-features

      # NOTE: this is recommended, as `yarn check` has been deprecated in Yarn 2.
      - name: Run Yarn Check
        working-directory: bindings/nodejs/
        run: yarn install --check-files

  check-format:
    name: Check Format
    if: ${{ ! github.event.schedule }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v2

      - name: Set Up Nightly Rustfmt
        uses: ./.github/actions/setup-rust
        with:
          toolchain: nightly
          components: rustfmt
          cache: false

      - name: Install Required Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Run Yarn Install
        working-directory: bindings/nodejs/
        run: yarn install

      - name: Run Cargo Fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path bindings/nodejs/Cargo.toml --all -- --check

      - name: Run Prettier Check
        working-directory: bindings/nodejs/
        run: yarn format-check

  audit:
    name: Perform Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v2

      - name: Install Cargo-audit with Nightly Rust
        uses: ./.github/actions/setup-rust
        with:
          toolchain: nightly
          install: cargo-audit
          cache: true
          cache-job-id: ${{ github.workflow }}-${{ github.job }}
          cache-hash: ${{ hashFiles('.github/workflows/examine-nodejs-bindings.yml') }}

      - name: Run Cargo Audit
        uses: actions-rs/cargo@v1
        with:
          command: audit
          args: --file bindings/nodejs/Cargo.lock --deny warnings

      - name: Run Yarn Audit
        working-directory: bindings/nodejs/
        run: yarn audit
